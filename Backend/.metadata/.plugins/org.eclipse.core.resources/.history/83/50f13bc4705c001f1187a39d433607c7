package com.pet.controller;

import java.time.LocalDate;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.pet.entities.AdoptionApplication;
import com.pet.entities.AdoptionApplicationDetails;
import com.pet.entities.Pet;
import com.pet.entities.Shelter;
import com.pet.entities.User;
import com.pet.enums.ApplicationStatus;
import com.pet.service.IAdoptionApplicationService;
import com.pet.service.IPetService;
import com.pet.service.IShelterService;
import com.pet.service.IUserService;

@RestController
@RequestMapping("/adoption-application")
@CrossOrigin(origins = "http://localhost:3000", allowCredentials = "true")
public class AdoptionApplicationController {

	@Autowired
	private IAdoptionApplicationService adoptionApplicationService;
	
	@Autowired
	private IUserService userService;
	
	@Autowired
	private IShelterService shelterService;
	
	@Autowired
	private IPetService petService;
	
    @PostMapping
    public ResponseEntity<AdoptionApplication> submitApplication(
            @RequestBody AdoptionApplicationDetails applicationDetails,
            @RequestParam Long userId, @RequestParam Long petId) {
        
        User user = userService.getUserById(userId);
        Pet pet = petService.getPetById(petId);
        Shelter shelter = pet.getShelter(); // Assuming Pet has a reference to its Shelter

        AdoptionApplication application = new AdoptionApplication();
        application.setUser(user);
        application.setPet(pet);
        application.setShelter(shelter);
        application.setSubmissionDate(LocalDate.now());
        application.setApplicationStatus(ApplicationStatus.PENDING);

        applicationDetails.setApplication(application);

        AdoptionApplication savedApplication = adoptionApplicationService.saveApplication(application, applicationDetails);
        
        return ResponseEntity.ok(savedApplication);
    }
}
