package com.pet.controller;

import java.time.LocalDate;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.pet.dto.AdoptionApplicationRequest;
import com.pet.entities.AdoptionApplication;
import com.pet.entities.AdoptionApplicationDetails;
import com.pet.entities.Pet;
import com.pet.entities.Shelter;
import com.pet.entities.User;
import com.pet.enums.ApplicationStatus;
import com.pet.service.IAdoptionApplicationDetailsService;
import com.pet.service.IAdoptionApplicationService;
import com.pet.service.IPetService;
import com.pet.service.IUserService;

@RestController
@RequestMapping("/adoption-application")
@CrossOrigin(origins = "http://localhost:3000", allowCredentials = "true")
public class AdoptionApplicationController {

	@Autowired
    private IAdoptionApplicationService adoptionApplicationService;

    @Autowired
    private IAdoptionApplicationDetailsService adoptionApplicationDetailsService;
	
    @PostMapping
    public ResponseEntity<String> submitApplication(@RequestBody AdoptionApplication application) {
        try {
            // Save the adoption application
            AdoptionApplication savedApplication = adoptionApplicationService.saveAdoptionApplication(application);

            // Create and save adoption application details
            AdoptionApplicationDetails details = application.getAppDetails(); // Assuming details are provided in the application object
            if (details != null) {
                details.setApplicationId(savedApplication); // Link the details with the saved application
                adoptionApplicationDetailsService.saveAdoptionApplicationDetails(details);
            }

            return new ResponseEntity<>("Application submitted successfully!", HttpStatus.OK);
        } catch (Exception e) {
            return new ResponseEntity<>("Failed to submit application", HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }

}
